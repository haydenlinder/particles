(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./src/util/fly_controls.js":
/*!**********************************!*\
  !*** ./src/util/fly_controls.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n//@author James Baicoianu / http://www.baicoianu.com/\n\n\n\nthree__WEBPACK_IMPORTED_MODULE_0__[\"FlyControls\"] = function (object, domElement) {\n\n    if (domElement === undefined) {\n\n        console.warn('THREE.FlyControls: The second parameter \"domElement\" is now mandatory.');\n        domElement = document;\n\n    }\n\n    this.object = object;\n    this.domElement = domElement;\n\n    if (domElement) this.domElement.setAttribute('tabindex', - 1);\n\n    // API\n\n    this.movementSpeed = 1.0;\n    this.rollSpeed = 0.005;\n\n    this.dragToLook = false;\n    this.autoForward = false;\n\n    // disable default target object behavior\n\n    // internals\n\n    this.tmpQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__[\"Quaternion\"]();\n\n    this.mouseStatus = 0;\n\n    this.moveState = { up: 0, down: 0, left: 0, right: 0, forward: 0, back: 0, pitchUp: 0, pitchDown: 0, yawLeft: 0, yawRight: 0, rollLeft: 0, rollRight: 0 };\n    this.moveVector = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0, 0);\n    this.rotationVector = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0, 0);\n\n    this.keydown = function (event) {\n\n        if (event.altKey) {\n\n            return;\n\n        }\n\n        //event.preventDefault();\n\n        switch (event.keyCode) {\n\n            case 16: /* shift */ this.movementSpeedMultiplier = .1; break;\n\n            case 87: /*W*/ this.moveState.forward = 1; break;\n            case 83: /*S*/ this.moveState.back = 1; break;\n\n            case 65: /*A*/ this.moveState.left = 1; break;\n            case 68: /*D*/ this.moveState.right = 1; break;\n\n            case 82: /*R*/ this.moveState.up = 1; break;\n            case 70: /*F*/ this.moveState.down = 1; break;\n\n            case 38: /*up*/ this.moveState.pitchUp = 1; break;\n            case 40: /*down*/ this.moveState.pitchDown = 1; break;\n\n            case 37: /*left*/ this.moveState.yawLeft = 1; break;\n            case 39: /*right*/ this.moveState.yawRight = 1; break;\n\n            case 81: /*Q*/ this.moveState.rollLeft = 1; break;\n            case 69: /*E*/ this.moveState.rollRight = 1; break;\n\n        }\n\n        this.updateMovementVector();\n        this.updateRotationVector();\n\n    };\n\n    this.keyup = function (event) {\n\n        switch (event.keyCode) {\n\n            case 16: /* shift */ this.movementSpeedMultiplier = 1; break;\n\n            case 87: /*W*/ this.moveState.forward = 0; break;\n            case 83: /*S*/ this.moveState.back = 0; break;\n\n            case 65: /*A*/ this.moveState.left = 0; break;\n            case 68: /*D*/ this.moveState.right = 0; break;\n\n            case 82: /*R*/ this.moveState.up = 0; break;\n            case 70: /*F*/ this.moveState.down = 0; break;\n\n            case 38: /*up*/ this.moveState.pitchUp = 0; break;\n            case 40: /*down*/ this.moveState.pitchDown = 0; break;\n\n            case 37: /*left*/ this.moveState.yawLeft = 0; break;\n            case 39: /*right*/ this.moveState.yawRight = 0; break;\n\n            case 81: /*Q*/ this.moveState.rollLeft = 0; break;\n            case 69: /*E*/ this.moveState.rollRight = 0; break;\n\n        }\n\n        this.updateMovementVector();\n        this.updateRotationVector();\n\n    };\n\n    this.mousedown = function (event) {\n\n        if (this.domElement !== document) {\n\n            this.domElement.focus();\n\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.dragToLook) {\n\n            this.mouseStatus++;\n\n        } else {\n\n            switch (event.button) {\n\n                case 0: this.moveState.forward = 1; break;\n                case 2: this.moveState.back = 1; break;\n\n            }\n\n            this.updateMovementVector();\n\n        }\n\n    };\n\n    this.mousemove = function (event) {\n\n        if (!this.dragToLook || this.mouseStatus > 0) {\n\n            var container = this.getContainerDimensions();\n            var halfWidth = container.size[0] / 2;\n            var halfHeight = container.size[1] / 2;\n\n            this.moveState.yawLeft = - ((event.pageX - container.offset[0]) - halfWidth) / halfWidth;\n            this.moveState.pitchDown = ((event.pageY - container.offset[1]) - halfHeight) / halfHeight;\n\n            this.updateRotationVector();\n\n        }\n\n    };\n\n    this.mouseup = function (event) {\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.dragToLook) {\n\n            this.mouseStatus--;\n\n            this.moveState.yawLeft = this.moveState.pitchDown = 0;\n\n        } else {\n\n            switch (event.button) {\n\n                case 0: this.moveState.forward = 0; break;\n                case 2: this.moveState.back = 0; break;\n\n            }\n\n            this.updateMovementVector();\n\n        }\n\n        this.updateRotationVector();\n\n    };\n\n    this.update = function (delta) {\n\n        var moveMult = delta * this.movementSpeed;\n        var rotMult = delta * this.rollSpeed;\n\n        this.object.translateX(this.moveVector.x * moveMult);\n        this.object.translateY(this.moveVector.y * moveMult);\n        this.object.translateZ(this.moveVector.z * moveMult);\n\n        this.tmpQuaternion.set(this.rotationVector.x * rotMult, this.rotationVector.y * rotMult, this.rotationVector.z * rotMult, 1).normalize();\n        this.object.quaternion.multiply(this.tmpQuaternion);\n\n        // expose the rotation vector for convenience\n        this.object.rotation.setFromQuaternion(this.object.quaternion, this.object.rotation.order);\n\n\n    };\n\n    this.updateMovementVector = function () {\n\n        var forward = (this.moveState.forward || (this.autoForward && !this.moveState.back)) ? 1 : 0;\n\n        this.moveVector.x = (- this.moveState.left + this.moveState.right);\n        this.moveVector.y = (- this.moveState.down + this.moveState.up);\n        this.moveVector.z = (- forward + this.moveState.back);\n\n        //console.log( 'move:', [ this.moveVector.x, this.moveVector.y, this.moveVector.z ] );\n\n    };\n\n    this.updateRotationVector = function () {\n\n        this.rotationVector.x = (- this.moveState.pitchDown + this.moveState.pitchUp);\n        this.rotationVector.y = (- this.moveState.yawRight + this.moveState.yawLeft);\n        this.rotationVector.z = (- this.moveState.rollRight + this.moveState.rollLeft);\n\n        //console.log( 'rotate:', [ this.rotationVector.x, this.rotationVector.y, this.rotationVector.z ] );\n\n    };\n\n    this.getContainerDimensions = function () {\n\n        if (this.domElement != document) {\n\n            return {\n                size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n                offset: [this.domElement.offsetLeft, this.domElement.offsetTop]\n            };\n\n        } else {\n\n            return {\n                size: [window.innerWidth, window.innerHeight],\n                offset: [0, 0]\n            };\n\n        }\n\n    };\n\n    function bind(scope, fn) {\n\n        return function () {\n\n            fn.apply(scope, arguments);\n\n        };\n\n    }\n\n    function contextmenu(event) {\n\n        event.preventDefault();\n\n    }\n\n    this.dispose = function () {\n\n        this.domElement.removeEventListener('contextmenu', contextmenu, false);\n        this.domElement.removeEventListener('mousedown', _mousedown, false);\n        this.domElement.removeEventListener('mousemove', _mousemove, false);\n        this.domElement.removeEventListener('mouseup', _mouseup, false);\n\n        window.removeEventListener('keydown', _keydown, false);\n        window.removeEventListener('keyup', _keyup, false);\n\n    };\n\n    var _mousemove = bind(this, this.mousemove);\n    var _mousedown = bind(this, this.mousedown);\n    var _mouseup = bind(this, this.mouseup);\n    var _keydown = bind(this, this.keydown);\n    var _keyup = bind(this, this.keyup);\n\n    this.domElement.addEventListener('contextmenu', contextmenu, false);\n\n    this.domElement.addEventListener('mousemove', _mousemove, false);\n    this.domElement.addEventListener('mousedown', _mousedown, false);\n    this.domElement.addEventListener('mouseup', _mouseup, false);\n\n    window.addEventListener('keydown', _keydown, false);\n    window.addEventListener('keyup', _keyup, false);\n\n    this.updateMovementVector();\n    this.updateRotationVector();\n\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (three__WEBPACK_IMPORTED_MODULE_0__[\"FlyControls\"]);\n\n//# sourceURL=webpack:///./src/util/fly_controls.js?");

/***/ })

}]);